name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create static directory
        run: |
          mkdir -p static

      - name: Run tests with SQLite
        run: |
          # Принудительно используем SQLite
          python -c "
          import os
          import django
          from django.conf import settings
          
          # Явно устанавливаем SQLite
          os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'EquipSenseWebApp.settings')
          os.environ.setdefault('DATABASE_URL', 'sqlite:///:memory:')
          
          # Импортируем и настраиваем settings
          django.conf.settings.configure(
              DEBUG=True,
              DATABASES={
                  'default': {
                      'ENGINE': 'django.db.backends.sqlite3',
                      'NAME': ':memory:',
                  }
              },
              INSTALLED_APPS=[
                  'django.contrib.admin',
                  'django.contrib.auth',
                  'django.contrib.contenttypes',
                  'django.contrib.sessions',
                  'django.contrib.messages',
                  'django.contrib.staticfiles',
                  'EquipSense',
              ],
              # Добавьте другие необходимые настройки
              USE_TZ=True,
              SECRET_KEY='test-key-for-ci',
          )
          
          django.setup()
          
          # Применяем миграции
          from django.core.management import execute_from_command_line
          execute_from_command_line(['manage.py', 'migrate', '--noinput'])
          
          # Запускаем тесты
          from django.test.utils import get_runner
          TestRunner = get_runner(settings)
          test_runner = TestRunner(verbosity=1)
          failures = test_runner.run_tests(['EquipSense.tests'])
          exit(bool(failures))
          "